{"version":3,"file":"static/webpack/static/development/pages/current-run.js.8dd870a1b7e672e41c11.hot-update.js","sources":["webpack:///./pages/current-run.tsx"],"sourcesContent":["import Page from \"../templates/Page\";\nimport Link from \"next/link\";\nimport Timer from \"../components/Timer\";\nimport MileCounter from \"../components/MileCounter\";\nimport { useState, useEffect, Dispatch, SetStateAction, useRef } from 'react';\nimport styled from \"../components/styles/theme\";\nimport { computeDistanceBetween, LatLng } from \"spherical-geometry-js\";\nimport Distance from \"../components/Distance\";\nimport Speed from \"../components/Speed\";\nimport FullPage from \"../components/FullPage\";\nconst io = require('socket.io-client');\nconst socket  = io('http://localhost:8000');\n\nconst CurrentRun = () => {\n\n    const [currentRun, setCurrentRun] = useState({distance: 0, speed: 0, duration: 0})\n\n    useEffect(() => {\n        socket.on('currentRun', (details) => {\n            console.log(details);\n            setCurrentRun(JSON.parse(details));\n          })\n     }, [currentRun]);\n\n  \n    return (\n        <Page>\n            <FullPage>\n                <div>\n                    <Timer time={currentRun.duration}/>\n                    <Speed speed={currentRun.speed}/>\n                    <Distance meters={currentRun.distance} />\n                </div>\n            </FullPage>\n        </Page>\n    )\n}\n\ninterface InfoProps {\n    isRunning: boolean;\n}\nconst InfoText = styled.p<InfoProps>`\n    visibility: ${props => props.isRunning ? \"hidden\" : \"visible\"};\n    color: ${props => props.theme.green};\n    text-transform: uppercase;\n    font-size: 18px;\n`\n\nconst Button = styled.button`\n    padding: 10px 30px ;\n    background: none;\n    color: ${props => props.theme.green};\n    border: solid 1px ${props => props.theme.green};\n    margin: 15px;\n    font-family: sans-serif;\n    font-size: 18px;\n    text-transform: uppercase;\n    border-radius: 2px;\n`;\n\nconst Center = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nconst ButtonLink = styled.a`\n    display: block;\n    padding: 10px 30px ;\n    border: none;\n    background: ${props => props.theme.green};\n    font-family: sans-serif;\n    font-size: 14px;\n`;\nconst Console = styled.ul`\n    background: #16103a;\n    min-height: 500px;\n    max-height: 500px;\n    overflow: scroll;\n    margin-block-start: 0;\n    padding-inline-start: 0;\n    li {\n        font-size: 8px;\n        color: #fff;\n        list-style-type: none;\n        font-family: monospace;\n        padding: 0;\n    }\n`;\n\n\nexport default CurrentRun"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAKA;AAGA;AAAA;AACA;AAAA;AAQA;AAKA;AAIA;AAAA;AAIA;AAiBA;;;;A","sourceRoot":""}