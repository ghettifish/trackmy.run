{"ast":null,"code":"var _jsxFileName = \"/Users/nicolasbovee/Projects/trackmy.run/pages/current-run.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Page from \"../templates/Page\";\nimport Timer from \"../components/Timer\";\nimport { useState } from 'react';\nimport styled from \"../components/styles/theme\";\nimport Distance from \"../components/Distance\";\nimport Speed from \"../components/Speed\";\nimport FullPage from \"../components/FullPage\";\nimport socketIOClient from 'socket.io-client';\nconst endpoint = 'http://localhost:8000';\n\nconst CurrentRun = () => {\n  const {\n    0: currentRun,\n    1: setCurrentRun\n  } = useState({\n    distance: 0,\n    speed: 0,\n    duration: 0\n  });\n  const socket = socketIOClient(endpoint);\n  socket.on('currentRun', details => {\n    console.log(details);\n    setCurrentRun(JSON.parse(details));\n  });\n  return __jsx(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(FullPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(Timer, {\n    time: currentRun.duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(Speed, {\n    speed: currentRun.speed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(Distance, {\n    meters: currentRun.distance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst InfoText = styled.p`\n    visibility: ${props => props.isRunning ? \"hidden\" : \"visible\"};\n    color: ${props => props.theme.green};\n    text-transform: uppercase;\n    font-size: 18px;\n`;\nconst Button = styled.button`\n    padding: 10px 30px ;\n    background: none;\n    color: ${props => props.theme.green};\n    border: solid 1px ${props => props.theme.green};\n    margin: 15px;\n    font-family: sans-serif;\n    font-size: 18px;\n    text-transform: uppercase;\n    border-radius: 2px;\n`;\nconst Center = styled.div`\n    display: flex;\n    justify-content: center;\n`;\nconst ButtonLink = styled.a`\n    display: block;\n    padding: 10px 30px ;\n    border: none;\n    background: ${props => props.theme.green};\n    font-family: sans-serif;\n    font-size: 14px;\n`;\nconst Console = styled.ul`\n    background: #16103a;\n    min-height: 500px;\n    max-height: 500px;\n    overflow: scroll;\n    margin-block-start: 0;\n    padding-inline-start: 0;\n    li {\n        font-size: 8px;\n        color: #fff;\n        list-style-type: none;\n        font-family: monospace;\n        padding: 0;\n    }\n`;\nexport default CurrentRun;","map":{"version":3,"sources":["/Users/nicolasbovee/Projects/trackmy.run/pages/current-run.tsx"],"names":["Page","Timer","useState","styled","Distance","Speed","FullPage","socketIOClient","endpoint","CurrentRun","currentRun","setCurrentRun","distance","speed","duration","socket","on","details","console","log","JSON","parse","InfoText","p","props","isRunning","theme","green","Button","button","Center","div","ButtonLink","a","Console","ul"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,QAAT,QAAsE,OAAtE;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,MAAMC,QAAQ,GAAI,uBAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,KAAK,EAAE,CAArB;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAAD,CAA5C;AACA,QAAMC,MAAM,GAAGR,cAAc,CAACC,QAAD,CAA7B;AACAO,EAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAyBC,OAAD,IAAa;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAN,IAAAA,aAAa,CAACS,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAD,CAAb;AACD,GAHD;AAKA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEP,UAAU,CAACI,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,UAAU,CAACG,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEH,UAAU,CAACE,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CADJ,CADJ;AAWH,CApBD;;AAyBA,MAAMU,QAAQ,GAAGnB,MAAM,CAACoB,CAAa;kBACnBC,KAAK,IAAIA,KAAK,CAACC,SAAN,GAAkB,QAAlB,GAA6B,SAAU;aACrDD,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYC,KAAM;;;CAFxC;AAOA,MAAMC,MAAM,GAAGzB,MAAM,CAAC0B,MAAO;;;aAGhBL,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYC,KAAM;wBAChBH,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYC,KAAM;;;;;;CAJnD;AAYA,MAAMG,MAAM,GAAG3B,MAAM,CAAC4B,GAAI;;;CAA1B;AAKA,MAAMC,UAAU,GAAG7B,MAAM,CAAC8B,CAAE;;;;kBAIVT,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYC,KAAM;;;CAJ7C;AAQA,MAAMO,OAAO,GAAG/B,MAAM,CAACgC,EAAG;;;;;;;;;;;;;;CAA1B;AAiBA,eAAe1B,UAAf","sourcesContent":["import Page from \"../templates/Page\";\nimport Link from \"next/link\";\nimport Timer from \"../components/Timer\";\nimport MileCounter from \"../components/MileCounter\";\nimport { useState, useEffect, Dispatch, SetStateAction, useRef } from 'react';\nimport styled from \"../components/styles/theme\";\nimport { computeDistanceBetween, LatLng } from \"spherical-geometry-js\";\nimport Distance from \"../components/Distance\";\nimport Speed from \"../components/Speed\";\nimport FullPage from \"../components/FullPage\";\nimport socketIOClient from 'socket.io-client'\n\nconst endpoint  = 'http://localhost:8000';\n\nconst CurrentRun = () => {\n\n    const [currentRun, setCurrentRun] = useState({distance: 0, speed: 0, duration: 0})\n    const socket = socketIOClient(endpoint);\n    socket.on('currentRun', (details) => {\n      console.log(details);\n      setCurrentRun(JSON.parse(details));\n    })\n\n    return (\n        <Page>\n            <FullPage>\n                <div>\n                    <Timer time={currentRun.duration}/>\n                    <Speed speed={currentRun.speed}/>\n                    <Distance meters={currentRun.distance} />\n                </div>\n            </FullPage>\n        </Page>\n    )\n}\n\ninterface InfoProps {\n    isRunning: boolean;\n}\nconst InfoText = styled.p<InfoProps>`\n    visibility: ${props => props.isRunning ? \"hidden\" : \"visible\"};\n    color: ${props => props.theme.green};\n    text-transform: uppercase;\n    font-size: 18px;\n`\n\nconst Button = styled.button`\n    padding: 10px 30px ;\n    background: none;\n    color: ${props => props.theme.green};\n    border: solid 1px ${props => props.theme.green};\n    margin: 15px;\n    font-family: sans-serif;\n    font-size: 18px;\n    text-transform: uppercase;\n    border-radius: 2px;\n`;\n\nconst Center = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nconst ButtonLink = styled.a`\n    display: block;\n    padding: 10px 30px ;\n    border: none;\n    background: ${props => props.theme.green};\n    font-family: sans-serif;\n    font-size: 14px;\n`;\nconst Console = styled.ul`\n    background: #16103a;\n    min-height: 500px;\n    max-height: 500px;\n    overflow: scroll;\n    margin-block-start: 0;\n    padding-inline-start: 0;\n    li {\n        font-size: 8px;\n        color: #fff;\n        list-style-type: none;\n        font-family: monospace;\n        padding: 0;\n    }\n`;\n\n\nexport default CurrentRun"]},"metadata":{},"sourceType":"module"}