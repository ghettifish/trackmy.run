{"ast":null,"code":"var _jsxFileName = \"/Users/nicbovee/Projects/PrismaDemo/frontend/components/Timer.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport DataField from \"./DataField\";\n\nvar getSeconds = function getSeconds(time) {\n  return time % 60 < 10 ? \"0\" + (time % 60).toFixed() : (time % 60).toFixed();\n};\n\nvar getMinutes = function getMinutes(time) {\n  return Math.floor(time / 60) % 60 < 10 ? \"0\" + (Math.floor(time / 60) % 60).toFixed() : (Math.floor(time / 60) % 60).toFixed();\n};\n\nvar getHours = function getHours(time) {\n  return Math.floor(time / 3600) < 10 ? \"0\" + Math.floor(time / 3600).toFixed() : Math.floor(time / 3600).toFixed();\n};\n\nvar getTimestamp = function getTimestamp(time) {\n  return \"\".concat(getHours(time), \":\").concat(getMinutes(time), \":\").concat(getSeconds(time));\n};\n\nvar Timer = function Timer(props) {\n  return __jsx(DataField, {\n    label: \"Time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, getTimestamp(props.time));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/nicbovee/Projects/PrismaDemo/frontend/components/Timer.tsx"],"names":["DataField","getSeconds","time","toFixed","getMinutes","Math","floor","getHours","getTimestamp","Timer","props"],"mappings":";;;AACA,OAAOA,SAAP,MAAsB,aAAtB;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SACdA,IAAI,GAAG,EAAR,GAAc,EAAd,GACM,MAAI,CAACA,IAAI,GAAG,EAAR,EAAYC,OAAZ,EADV,GAEM,CAACD,IAAI,GAAG,EAAR,EAAYC,OAAZ,EAHS;AAAA,CAAnB;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACF,IAAD;AAAA,SACfG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,IAAwB,EAAxB,GAA6B,EAA7B,GACM,MAAI,CAACG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,IAAsB,EAAvB,EAA2BC,OAA3B,EADV,GAEM,CAACE,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,IAAsB,EAAvB,EAA2BC,OAA3B,EAHS;AAAA,CAAnB;;AAMA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACL,IAAD;AAAA,SACbG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,IAAlB,IAA0B,EAA1B,GACM,MAAIG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,IAAlB,EAAwBC,OAAxB,EADV,GAEME,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,IAAlB,EAAwBC,OAAxB,EAHO;AAAA,CAAjB;;AAMA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACN,IAAD;AAAA,mBAAqBK,QAAQ,CAACL,IAAD,CAA7B,cAAuCE,UAAU,CAACF,IAAD,CAAjD,cAA2DD,UAAU,CAACC,IAAD,CAArE;AAAA,CAArB;;AAEA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SAAkB,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBF,YAAY,CAACE,KAAK,CAACR,IAAP,CAArC,CAAlB;AAAA,CAAd;;AACA,eAAeO,KAAf","sourcesContent":["import styled  from \"./styles/theme\";\nimport DataField from \"./DataField\";\n\ninterface Props {\n    time: number;\n}\nconst getSeconds = (time:number) =>  (\n    (time % 60) < 10 \n        ? \"0\"+(time % 60).toFixed() \n        : (time % 60).toFixed()\n)\n\nconst getMinutes = (time: number) => (\n    Math.floor(time / 60) % 60 < 10 \n        ? \"0\"+(Math.floor(time / 60)%60).toFixed() \n        : (Math.floor(time / 60)%60).toFixed()\n)\n\nconst getHours = (time: number) => (\n    Math.floor(time / 3600) < 10 \n        ? \"0\"+Math.floor(time / 3600).toFixed() \n        : Math.floor(time / 3600).toFixed()\n)\n\nconst getTimestamp = (time: number) => `${getHours(time)}:${getMinutes(time)}:${getSeconds(time)}`\n\nconst Timer = (props: Props) => <DataField label=\"Time\">{getTimestamp(props.time)}</DataField>\nexport default Timer"]},"metadata":{},"sourceType":"module"}