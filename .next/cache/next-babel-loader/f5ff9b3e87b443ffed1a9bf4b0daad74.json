{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/nicolasbovee/Projects/trackmy.run/pages/running.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    background: #16103a;\\n    min-height: 500px;\\n    max-height: 500px;\\n    overflow: scroll;\\n    margin-block-start: 0;\\n    padding-inline-start: 0;\\n    li {\\n        font-size: 8px;\\n        color: #fff;\\n        list-style-type: none;\\n        font-family: monospace;\\n        padding: 0;\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    padding: 10px 30px ;\\n    border: none;\\n    background: \", \";\\n    font-family: sans-serif;\\n    font-size: 14px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 10px 30px ;\\n    background: none;\\n    color: \", \";\\n    border: solid 1px \", \";\\n    margin: 15px;\\n    font-family: sans-serif;\\n    font-size: 18px;\\n    text-transform: uppercase;\\n    border-radius: 2px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    visibility: \", \";\\n    color: \", \";\\n    text-transform: uppercase;\\n    font-size: 18px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Page from \"../templates/Page\";\nimport Link from \"next/link\";\nimport Timer from \"../components/Timer\";\nimport { useState, useEffect, useRef } from 'react';\nimport styled from \"../components/styles/theme\";\nimport { computeDistanceBetween, LatLng } from \"spherical-geometry-js\";\nimport Distance from \"../components/Distance\";\nimport Speed from \"../components/Speed\";\nimport FullPage from \"../components/FullPage\";\nimport socketIOClient from 'socket.io-client';\nvar endpoint = 'http://localhost:8000';\n\nvar getCoordinates = function getCoordinates(arr, callback) {\n  var response = null;\n  var options = {\n    enableHighAccuracy: true,\n    timeout: 1000,\n    maximumAge: 0\n  };\n\n  function success(pos) {\n    var crd = pos.coords;\n    console.log(crd);\n    response = {\n      latitude: crd.latitude,\n      longitude: crd.longitude,\n      accuracy: crd.accuracy,\n      altitude: crd.altitude,\n      altitudeAccuracy: crd.altitudeAccuracy,\n      heading: crd.heading,\n      speed: crd.speed,\n      utc: _Date$now()\n    };\n    callback([].concat(_toConsumableArray(arr), [response]));\n    return;\n  }\n\n  function error(err) {\n    console.warn(\"ERROR(\".concat(err.code, \"): \").concat(err.message));\n  }\n\n  navigator.geolocation.getCurrentPosition(success, error, options);\n};\n\nvar sampleData = [{\n  latitude: 39.0067718,\n  longitude: -105.06114945,\n  utc: 1567956461422\n}, {\n  latitude: 39.0069154,\n  longitude: -105.0603721,\n  utc: 1567956490407\n}, {\n  latitude: 38.9993031,\n  longitude: -105.0402898,\n  utc: 1567958139410\n}];\n\nvar StartStop = function StartStop(props) {\n  var isRunning = props.isRunning,\n      toggle = props.toggle;\n  return isRunning ? __jsx(Button, {\n    onClick: function onClick() {\n      return toggle(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Pause\") : __jsx(Button, {\n    onClick: function onClick() {\n      return toggle(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Start\");\n};\n\nfunction useInterval(callback, delay) {\n  var savedCallback = useRef(); // Remember the latest callback.\n\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]); // Set up the interval.\n\n  useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nvar Running = function Running() {\n  var _useState = useState(_Date$now()),\n      startTime = _useState[0],\n      setStartTime = _useState[1];\n\n  var _useState2 = useState([]),\n      coordinates = _useState2[0],\n      setCoordinates = _useState2[1];\n\n  var _useState3 = useState(true),\n      isRunning = _useState3[0],\n      setIsRunning = _useState3[1];\n\n  var _useState4 = useState(0),\n      duration = _useState4[0],\n      setDuration = _useState4[1];\n\n  var _useState5 = useState(0),\n      speed = _useState5[0],\n      setSpeed = _useState5[1];\n\n  var _useState6 = useState(0),\n      distance = _useState6[0],\n      setDistance = _useState6[1];\n\n  var send = function send() {\n    var socket = socketIOClient(endpoint);\n    socket.emit(\"currentRun\", _JSON$stringify({\n      duration: duration,\n      speed: speed,\n      distance: distance\n    }));\n  };\n\n  useInterval(function () {\n    if (isRunning) {\n      getCoordinates(coordinates, setCoordinates);\n      var current = coordinates[coordinates.length - 1] && coordinates[coordinates.length - 1];\n      var previous = coordinates[coordinates.length - 2] && coordinates[coordinates.length - 2]; // const currentTime = current && current.utc;\n      // if(currentTime) {\n      //     setDuration((currentTime - startTime) / 1000);\n      // }\n\n      setDuration(duration + 1);\n\n      if (current && previous) {\n        var currentDistance = computeDistanceBetween(new LatLng(current.latitude, current.longitude), new LatLng(previous.latitude, previous.longitude));\n        setSpeed(currentDistance / 1609.344 * 60 * 60);\n        setDistance(distance + currentDistance);\n      }\n\n      send(); //console.log(coordinates);\n    }\n  }, 1000);\n  return __jsx(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, __jsx(FullPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(InfoText, {\n    isRunning: isRunning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Paused\")), __jsx(Timer, {\n    time: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), __jsx(Speed, {\n    speed: speed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), __jsx(Distance, {\n    meters: distance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), __jsx(Center, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(StartStop, {\n    isRunning: isRunning,\n    toggle: setIsRunning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/finished\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Stop\"))))), __jsx(Console, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"--------------\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"|  nerdy shit |\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"--------------\"), coordinates.map(function (x, i) {\n    var pointer = coordinates[coordinates.length - 1 - i];\n    return __jsx(\"li\", {\n      key: pointer.utc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Lat: \", pointer.latitude, \" | Lng: \", pointer.longitude, \" | UTC: \", pointer.utc);\n  })));\n};\n\nvar InfoText = styled.p(_templateObject(), function (props) {\n  return props.isRunning ? \"hidden\" : \"visible\";\n}, function (props) {\n  return props.theme.green;\n});\nvar Button = styled.button(_templateObject2(), function (props) {\n  return props.theme.green;\n}, function (props) {\n  return props.theme.green;\n});\nvar Center = styled.div(_templateObject3());\nvar ButtonLink = styled.a(_templateObject4(), function (props) {\n  return props.theme.green;\n});\nvar Console = styled.ul(_templateObject5());\nexport default Running;","map":{"version":3,"sources":["/Users/nicolasbovee/Projects/trackmy.run/pages/running.tsx"],"names":["Page","Link","Timer","useState","useEffect","useRef","styled","computeDistanceBetween","LatLng","Distance","Speed","FullPage","socketIOClient","endpoint","getCoordinates","arr","callback","response","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","console","log","latitude","longitude","accuracy","altitude","altitudeAccuracy","heading","speed","utc","error","err","warn","code","message","navigator","geolocation","getCurrentPosition","sampleData","StartStop","props","isRunning","toggle","useInterval","delay","savedCallback","current","tick","id","setInterval","clearInterval","Running","startTime","setStartTime","coordinates","setCoordinates","setIsRunning","duration","setDuration","setSpeed","distance","setDistance","send","socket","emit","length","previous","currentDistance","map","x","i","pointer","InfoText","p","theme","green","Button","button","Center","div","ButtonLink","a","Console","ul"],"mappings":"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","sourcesContent":["import Page from \"../templates/Page\";\nimport Link from \"next/link\";\nimport Timer from \"../components/Timer\";\nimport MileCounter from \"../components/MileCounter\";\nimport { useState, useEffect, Dispatch, SetStateAction, useRef } from 'react';\nimport styled from \"../components/styles/theme\";\nimport { computeDistanceBetween, LatLng } from \"spherical-geometry-js\";\nimport Distance from \"../components/Distance\";\nimport Speed from \"../components/Speed\";\nimport FullPage from \"../components/FullPage\";\nimport socketIOClient from 'socket.io-client'\n\nconst endpoint  = 'http://localhost:8000';\n\n\nconst getCoordinates: (arr: Coordinates[], callback: (arr: Coordinates[]) => void) => void = (arr, callback) => {\n    \n    let response = null;\n    var options = {\n        enableHighAccuracy: true,\n        timeout: 1000,\n        maximumAge: 0\n    };\n\n    function success(pos: any) {\n        let crd: Coordinates = pos.coords;\n        console.log(crd);\n        response = {\n            latitude: crd.latitude,\n            longitude: crd.longitude,\n            accuracy: crd.accuracy,\n            altitude: crd.altitude,\n            altitudeAccuracy: crd.altitudeAccuracy,\n            heading: crd.heading,\n            speed: crd.speed,\n            utc: Date.now()\n        } as Coordinates\n        callback([...arr, response]);\n        return;\n    }\n      \n    function error(err: any) {\n        console.warn(`ERROR(${err.code}): ${err.message}`);\n    }\n\n    navigator.geolocation.getCurrentPosition(success, error, options);\n}\n\ninterface Coordinates {\n    latitude: number;\n    longitude: number;\n    utc: number;\n    altitude?: number | null;\n    accuracy?: number;\n    altitudeAccuracy?: number | null;\n    heading?: number | null;\n    speed?: number | null;\n}\n\nconst sampleData: Coordinates[] = [\n    {\n        latitude: 39.0067718,\n        longitude: -105.06114945,\n        utc: 1567956461422\n    },\n    {\n        latitude: 39.0069154,\n        longitude: -105.0603721,\n        utc: 1567956490407\n    },\n    {\n        latitude: 38.9993031,\n        longitude: -105.0402898,\n        utc: 1567958139410\n    }\n]\ninterface StartStopProps {\n    isRunning: boolean,\n    toggle: Dispatch<SetStateAction<boolean>>\n}\n\nconst StartStop = (props: StartStopProps) => {\n    const { isRunning, toggle } = props;\n    return (\n        isRunning \n            ? <Button onClick={() => toggle(false)}>Pause</Button>\n            : <Button onClick={() => toggle(true)}>Start</Button>\n    )\n}\nfunction useInterval(callback: any, delay: any) {\n    const savedCallback = useRef() as any;\n  \n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\nconst Running = () => {\n    const [startTime, setStartTime] = useState(Date.now());\n    const [coordinates, setCoordinates] = useState([] as Coordinates[]);\n    const [isRunning, setIsRunning] = useState(true);\n    const [duration, setDuration]  = useState(0);\n    const [speed, setSpeed] = useState(0);\n    const [distance, setDistance] = useState(0);\n\n    const send = () => {\n        const socket = socketIOClient(endpoint)\n        socket.emit(\"currentRun\", JSON.stringify({duration, speed, distance}))\n    }\n\n    useInterval(() => {\n        if(isRunning) {\n            getCoordinates(coordinates, setCoordinates);\n            const current = coordinates[coordinates.length-1] && coordinates[coordinates.length-1]\n            const previous = coordinates[coordinates.length-2] && coordinates[coordinates.length-2]\n\n            // const currentTime = current && current.utc;\n            // if(currentTime) {\n            //     setDuration((currentTime - startTime) / 1000);\n            // }\n            setDuration((duration+1));\n\n           \n\n            if(current && previous){\n                const currentDistance = computeDistanceBetween(new LatLng(current.latitude, current.longitude), new LatLng(previous.latitude, previous.longitude));\n                setSpeed((currentDistance / 1609.344) * 60 * 60);\n                \n                setDistance(distance + currentDistance);\n\n            }\n            send();\n           \n            //console.log(coordinates);\n\n        } \n    }, 1000)\n\n    \n\n    return (\n        <Page>\n            <FullPage>\n                <div>\n                    <Center>\n                        <InfoText isRunning={isRunning}>Paused</InfoText>\n                    </Center>\n                    <Timer time={duration}/>\n                    <Speed speed={speed}/>\n                    <Distance meters={distance} />\n                    <Center>\n                        <StartStop isRunning={isRunning} toggle={setIsRunning}/>\n                        <Link href=\"/finished\"><Button>Stop</Button></Link>\n                    </Center>\n                </div>\n            </FullPage>\n            <Console>\n                <li>--------------</li>\n                <li>|  nerdy shit |</li>\n                <li>--------------</li>\n            {\n                coordinates.map((x,i) => {\n                    const pointer = coordinates[coordinates.length - 1 -i];\n                    return <li key={pointer.utc}>Lat: {pointer.latitude} | Lng: {pointer.longitude} | UTC: {pointer.utc}</li>\n                })\n            }\n            </Console>\n        </Page>\n    )\n}\n\ninterface InfoProps {\n    isRunning: boolean;\n}\nconst InfoText = styled.p<InfoProps>`\n    visibility: ${props => props.isRunning ? \"hidden\" : \"visible\"};\n    color: ${props => props.theme.green};\n    text-transform: uppercase;\n    font-size: 18px;\n`\n\nconst Button = styled.button`\n    padding: 10px 30px ;\n    background: none;\n    color: ${props => props.theme.green};\n    border: solid 1px ${props => props.theme.green};\n    margin: 15px;\n    font-family: sans-serif;\n    font-size: 18px;\n    text-transform: uppercase;\n    border-radius: 2px;\n`;\n\nconst Center = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nconst ButtonLink = styled.a`\n    display: block;\n    padding: 10px 30px ;\n    border: none;\n    background: ${props => props.theme.green};\n    font-family: sans-serif;\n    font-size: 14px;\n`;\nconst Console = styled.ul`\n    background: #16103a;\n    min-height: 500px;\n    max-height: 500px;\n    overflow: scroll;\n    margin-block-start: 0;\n    padding-inline-start: 0;\n    li {\n        font-size: 8px;\n        color: #fff;\n        list-style-type: none;\n        font-family: monospace;\n        padding: 0;\n    }\n`;\n\n\nexport default Running"]},"metadata":{},"sourceType":"module"}