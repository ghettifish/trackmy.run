{"ast":null,"code":"var _jsxFileName = \"/Users/nicbovee/Projects/PrismaDemo/frontend/components/Timer.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst getSeconds = time => time % 60 < 10 ? \"0\" + (time % 60).toFixed() : (time % 60).toFixed();\n\nconst getMinutes = time => Math.floor(time / 60) < 10 ? \"0\" + (time / 60).toFixed() : (time / 60).toFixed();\n\nconst getHours = time => Math.floor(time / 3600) < 10 ? \"0\" + (time / 3600).toFixed() : (time / 3600).toFixed();\n\nconst getTimestamp = time => `${getHours(time)}:${getMinutes(time)}:${getSeconds(time)}`;\n\nconst Timer = props => __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, __jsx(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Time: \"), getTimestamp(props.time));\n\nexport default Timer;","map":{"version":3,"sources":["/Users/nicbovee/Projects/PrismaDemo/frontend/components/Timer.tsx"],"names":["getSeconds","time","toFixed","getMinutes","Math","floor","getHours","getTimestamp","Timer","props"],"mappings":";;;;AAGA,MAAMA,UAAU,GAAIC,IAAD,IACdA,IAAI,GAAG,EAAR,GAAc,EAAd,GACM,MAAI,CAACA,IAAI,GAAG,EAAR,EAAYC,OAAZ,EADV,GAEM,CAACD,IAAI,GAAG,EAAR,EAAYC,OAAZ,EAHV;;AAMA,MAAMC,UAAU,GAAIF,IAAD,IACfG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,EAAlB,IAAwB,EAAxB,GACM,MAAI,CAACA,IAAI,GAAG,EAAR,EAAYC,OAAZ,EADV,GAEM,CAACD,IAAI,GAAG,EAAR,EAAYC,OAAZ,EAHV;;AAMA,MAAMI,QAAQ,GAAIL,IAAD,IACbG,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAG,IAAlB,IAA0B,EAA1B,GACM,MAAI,CAACA,IAAI,GAAG,IAAR,EAAcC,OAAd,EADV,GAEM,CAACD,IAAI,GAAG,IAAR,EAAcC,OAAd,EAHV;;AAMA,MAAMK,YAAY,GAAIN,IAAD,IAAmB,GAAEK,QAAQ,CAACL,IAAD,CAAO,IAAGE,UAAU,CAACF,IAAD,CAAO,IAAGD,UAAU,CAACC,IAAD,CAAO,EAAjG;;AAEA,MAAMO,KAAK,GAAIC,KAAD,IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,EAA2BF,YAAY,CAACE,KAAK,CAACR,IAAP,CAAvC,CAAhC;;AACA,eAAeO,KAAf","sourcesContent":["interface Props {\n    time: number;\n}\nconst getSeconds = (time:number) =>  (\n    (time % 60) < 10 \n        ? \"0\"+(time % 60).toFixed() \n        : (time % 60).toFixed()\n)\n\nconst getMinutes = (time: number) => (\n    Math.floor(time / 60) < 10 \n        ? \"0\"+(time / 60).toFixed() \n        : (time / 60).toFixed()\n)\n\nconst getHours = (time: number) => (\n    Math.floor(time / 3600) < 10 \n        ? \"0\"+(time / 3600).toFixed() \n        : (time / 3600).toFixed()\n)\n\nconst getTimestamp = (time: number) => `${getHours(time)}:${getMinutes(time)}:${getSeconds(time)}`\n\nconst Timer = (props: Props) => <p><strong>Time: </strong>{getTimestamp(props.time)}</p>\nexport default Timer"]},"metadata":{},"sourceType":"module"}